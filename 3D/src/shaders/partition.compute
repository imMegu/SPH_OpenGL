#version 430 core

uniform int numParticles;
uniform float smoothingRadius;
#define WORKGROUP_SIZE 256
#define TOTAL_GRID_CELL_COUNT 262144

layout (local_size_x = WORKGROUP_SIZE) in;

layout(std430, binding = 3) buffer PredictedPositions {
    vec4 predictedPositions[];
};

layout(std430, binding = 4) buffer ParticleIndices {
    uint particleIndices[];
};

layout(std430, binding = 5) buffer CellIndices {
    uint cellIndices[];
};

uint GetFlatCellIndex(ivec4 cellIndex)
{
    // Offset so they're always positive
    const uint OFFSET = 1024u;
    uint x = uint(cellIndex.x + OFFSET);
    uint y = uint(cellIndex.y + OFFSET); 
    uint z = uint(cellIndex.z + OFFSET);
    
    const uint p1 = 73856093u;
    const uint p2 = 19349663u;
    const uint p3 = 83492791u;
    
    uint hash = p1 * x + p2 * y + p3 * z;
    return hash % TOTAL_GRID_CELL_COUNT;
}

void main() {
    uint id = gl_GlobalInvocationID.x;
    if (id >= numParticles) return;

    uint particleIndex = particleIndices[id];
    vec4 pos = predictedPositions[particleIndex];
    
    ivec4 cellIndex = ivec4(floor(pos / smoothingRadius));
    uint flatCellIndex = GetFlatCellIndex(cellIndex);
    
    cellIndices[id] = flatCellIndex;
}
