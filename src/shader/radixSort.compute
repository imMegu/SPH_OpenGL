#version 460

#define WORKGROUP_SIZE 512

layout(local_size_x = WORKGROUP_SIZE) in;

layout(std430, binding = 4) buffer Cells {
    vec3 cells[]; // Array of cells (id, hash, key)
};

uniform int numParticles;
uniform int groupWidth;
uniform int groupHeight;
uniform int stepIndex;

void main() {
    uint idx = gl_GlobalInvocationID.x;

    uint i = gl_GlobalInvocationID.x;
    uint h = i & (groupWidth - 1);
    uint indexLow = h + (groupHeight + 1) * (i / groupWidth);
    uint indexHigh = indexLow + (stepIndex == 0 ? groupHeight - 2 * h : (groupHeight + 1) / 2);

    if (indexHigh >= numParticles) return;

    // Extract components from cells
    uint idLow = uint(cells[indexLow].x);
    uint hashLow = uint(cells[indexLow].y);
    uint valueLow = uint(cells[indexLow].z);

    uint idHigh = uint(cells[indexHigh].x);
    uint hashHigh = uint(cells[indexHigh].y);
    uint valueHigh = uint(cells[indexHigh].z);

    // Bitonic sort comparison and swap
    if (valueLow > valueHigh)
    {
        cells[indexLow] = vec3(idHigh, hashHigh, valueHigh);
        cells[indexHigh] = vec3(idLow, hashLow, valueLow);
    }
    
}
